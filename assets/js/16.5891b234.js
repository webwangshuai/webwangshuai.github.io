(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{455:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-自定义构建函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义构建函数"}},[t._v("#")]),t._v(" 1.自定义构建函数")]),t._v(" "),s("h2",{attrs:{id:"_1-1-构建函数-builder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-构建函数-builder"}},[t._v("#")]),t._v(" 1.1 构建函数-@Builder")]),t._v(" "),s("p",[t._v("如果不想在直接抽象组件，ArkUI提供了一种更轻量的UI元素复用机制 @Builder，可以将重复使用的UI元素抽象成一个方法，在 build 方法里调用。称之为自定义构建函数")]),t._v(" "),s("h2",{attrs:{id:"_1-2-构建函数-传参传递-值传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-构建函数-传参传递-值传递"}},[t._v("#")]),t._v(" 1.2. 构建函数-传参传递(值传递)")]),t._v(" "),s("p",[t._v("传的参数是按值的话，那个builder不具备响应式特征"),s("br"),t._v("\n传的参数是复杂数据， 而且复杂数据类型中的参数有响应式修饰符修饰，那么具备响应式特征")]),t._v(" "),s("p",[t._v("自定义构建函数的参数传递有"),s("a",{attrs:{href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-builder-0000001524176981-V2#section163841721135012",target:"_blank",rel:"noopener noreferrer"}},[t._v("按值传递"),s("OutboundLink")],1),t._v("和按"),s("a",{attrs:{href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-builder-0000001524176981-V2#section1522464044212",target:"_blank",rel:"noopener noreferrer"}},[t._v("引用传递"),s("OutboundLink")],1),t._v("两种，均需遵守以下规则：")]),t._v(" "),s("ul",[s("li",[t._v("参数的类型必须与参数声明的类型一致，不允许undefined、null和返回undefined、null的表达式。")]),t._v(" "),s("li",[t._v("在自定义构建函数内部，不允许改变参数值。如果需要改变参数值，且同步回调用点，建议使用"),s("code",[t._v("@Link")]),t._v("。")]),t._v(" "),s("li",[t._v("@Builder内UI语法遵循"),s("a",{attrs:{href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-create-custom-components-0000001473537046-V2#section1150911733811",target:"_blank",rel:"noopener noreferrer"}},[t._v("UI语法规则"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_1-3-构建函数-传递参数-引用类型传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-构建函数-传递参数-引用类型传递"}},[t._v("#")]),t._v(" 1.3. 构建函数-传递参数(引用类型传递)")]),t._v(" "),s("h2",{attrs:{id:"_1-4-构建函数-builderparam-传递ui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-构建函数-builderparam-传递ui"}},[t._v("#")]),t._v(" 1.4 构建函数-@BuilderParam  传递UI")]),t._v(" "),s("p",[t._v("插槽-Vue-Slot React-RenderProps")]),t._v(" "),s("ul",[s("li",[t._v("把UI结构体的函数(Builder修饰的函数)当成参数传入到组件中，让组件放入固定的位置去渲染")]),t._v(" "),s("li",[t._v("子组件接收传入的函数的修饰符/装饰器叫做BuilderParam")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("ul",[s("li",[t._v("Component可以抽提组件")]),t._v(" "),s("li",[t._v("Builder可以实现轻量级的UI复用")])])]),s("p",[t._v("使用BuilderParam的步骤")]),t._v(" "),s("ul",[s("li",[t._v("前提：需要出现父子组件的关系")]),t._v(" "),s("li",[t._v("前提：BuilderParam应出现在子组件中")]),t._v(" "),s("li",[s("ol",[s("li",[t._v("子组件声明  @BuilderParam  getConent: () => void")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("BuilderParam的参数可以不给初始值，如果给了初始值， 就是没有内容的默认内容")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("父组件传入的时候，它需要用builder修饰的函数又或者是 一个箭头函数中包裹着")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"4"}},[s("li",[t._v("调用builder函数的逻辑")])])])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"title"}),s("p",[t._v("只有一个BuilderParam且不需要传参的时候，可以使用尾随闭包"),s("br"),t._v("\n注意：尾随闭包用空大括号就代表传递空内容，会替代默认内容")])]),s("h1",{attrs:{id:"_2-组件状态共享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件状态共享"}},[t._v("#")]),t._v(" 2.组件状态共享")]),t._v(" "),s("p",[t._v("State是当前组件的状态， 用State修饰的数据变化会驱动UI的更新（只有第一层）"),s("br"),t._v("\n父传子的时候，子组件定义变量的时候，如果没有任何的修饰符，那么该值只会在第一次渲染时生效")]),t._v(" "),s("h2",{attrs:{id:"_2-1-状态共享-父子单向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-状态共享-父子单向"}},[t._v("#")]),t._v(" 2.1 状态共享-父子单向")]),t._v(" "),s("p",[s("code",[t._v("@State")]),t._v("-"),s("code",[t._v("@Prop")])]),t._v(" "),s("p",[t._v("Prop 支持类型和State修饰符基本一致，并且Prop可以给初始值，也可以不给"),s("br"),t._v("\n注意：子组件仍然可以改自己，更新UI，但不会通知父组件(单向)，父组件改变后会覆盖子组件自己的值")]),t._v(" "),s("h2",{attrs:{id:"_2-2-状态共享-父子双向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-状态共享-父子双向"}},[t._v("#")]),t._v(" 2.2 状态共享-父子双向")]),t._v(" "),s("p",[s("code",[t._v("@State")]),t._v("-"),s("code",[t._v("@Link")])]),t._v(" "),s("p",[t._v("Prop修饰符- 父组件数据更新-让子组件更新- 子组件更新-父组件不为所动")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"}),s("p",[t._v("Prop是单向的，而Link修饰符则是双向的数据传递，只要使用Link修饰了传递过来的数据，这个时候就是双向同步了"),s("br"),t._v("\n注意点：\n"),s("code",[t._v("Link修饰符不允许给初始值")]),s("br"),t._v("\nLink修饰符的要求- 父组件传值时传的必须是Link或者State修饰的数据")])]),s("h2",{attrs:{id:"_2-3-状态共享-后代组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-状态共享-后代组件"}},[t._v("#")]),t._v(" 2.3 状态共享-后代组件")]),t._v(" "),s("p",[s("code",[t._v("@Provide")]),t._v("-"),s("code",[t._v("@Consume")])]),t._v(" "),s("ul",[s("li",[t._v("在不指定Provide名称的情况下，需要使用相同的名字来定义和接收数据")]),t._v(" "),s("li",[t._v("如果组件已有该命名变量，可以起别名进行提供/接收")]),t._v(" "),s("li",[t._v("提供起别名,"),s("code",[t._v("@Provide('newName')")]),t._v(" 重起一个别名叫newName,后代就只能接收newName")]),t._v(" "),s("li",[t._v("接收起别名 "),s("code",[t._v("@Consume('ProvideName') newName:类型")]),t._v("   提供的时候没有起别名，接收的时候重起一个别名叫newName")]),t._v(" "),s("li",[s("code",[t._v("@Consume代表数据是接收的，不能有默认值")])])]),t._v(" "),s("h2",{attrs:{id:"_2-4-状态共享-状态监听器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-状态共享-状态监听器"}},[t._v("#")]),t._v(" 2.4. 状态共享-状态监听器")]),t._v(" "),s("p",[t._v("如果开发者需要关注某个状态变量的值是否改变，可以使用 @Watch 为状态变量设置回调函数。"),s("br"),t._v(" "),s("code",[t._v('Watch("回调函数名")')]),t._v("中的回调必须在组件中声明，该函数接收一个参数，参数为修改的属性名"),s("br"),t._v("\n注意：Watch修饰符要写在 "),s("code",[t._v("State")]),t._v(" "),s("code",[t._v("Prop")]),t._v(" "),s("code",[t._v("Link")]),t._v(" "),s("code",[t._v("Provide")]),t._v("的修饰符下面，否则会有问题")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Consume")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Watch")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// watch写在要监听的数据下方")]),t._v("\n  isPlay"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监听的数据改变时会触发这个函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isPlay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"_2-5-observed与-objectlink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-observed与-objectlink"}},[t._v("#")]),t._v(" 2.5 @Observed与@ObjectLink")]),t._v(" "),s("p",[t._v("使用步骤：")]),t._v(" "),s("ul",[s("li",[t._v("使用 @Observed 修饰这个类")]),t._v(" "),s("li",[t._v("初始化数据：数据确保是通过 @Observed 修饰的类new出来的")]),t._v(" "),s("li",[t._v("通过 @ObjectLink 修饰传递的数据，可以直接修改被关联对象来更新UI")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"}),s("p",[t._v("注意点：")]),t._v(" "),s("ul",[s("li",[t._v("ObjectLink只能修饰被Observed修饰的class类型")]),t._v(" "),s("li",[t._v("Observed修饰的class的数据如果是复杂数据类型，需要采用赋值的方式才可以具备响应式特性-因为它只能监听到第一层")]),t._v(" "),s("li",[t._v("如果出现复杂类型嵌套，只Observed需要的class即可")]),t._v(" "),s("li",[t._v("ObjectLink修饰符不能用在Entry修饰的组件中")])])]),s("h2",{attrs:{id:"_2-6-next新增修饰符-require-track"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-next新增修饰符-require-track"}},[t._v("#")]),t._v(" 2.6 Next新增修饰符-Require-Track")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Require修饰符")]),s("br"),t._v("\n4.0的编辑器中- 如果子组件定义了Prop，那么父组件必须得传，不传则报错"),s("br"),t._v("\nNext版本中，如果想让父组件必须传递一个属性给Prop，作为强制性的约束条件，可以使用Require修饰符")])]),t._v(" "),s("p",[s("code",[t._v("Require修饰符只能作用在两个修饰符前面Prop BuilderParam")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Track")])])]),t._v(" "),s("p",[t._v("@Track应用于class对象的属性级别更新。@Track装饰的属性变化时，智慧触发该属性关联的ui更新")]),t._v(" "),s("p",[t._v("该修饰符不存在新的视觉效果，属于性能优化级的")]),t._v(" "),s("p",[t._v("Track的作用只更新对象中的某些字段， Track修饰符用来作用在class中的某些字段，只有被标记的字段才会更新，并且没有被Track标记的字段不能被使用"),s("br"),t._v("\n场景： 假如只想根据对象中某个字段来更新或者渲染视图 就可以使用Track")]),t._v(" "),s("h1",{attrs:{id:"_3、应用状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、应用状态"}},[t._v("#")]),t._v(" 3、应用状态")]),t._v(" "),s("h2",{attrs:{id:"_3-1-应用状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-应用状态"}},[t._v("#")]),t._v(" 3.1 应用状态")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("LocalStorage-UIAbility状态（内存- 注意：它非持久化，非全应用）")])]),t._v(" "),s("li",[s("p",[t._v("AppStorage- 应用内状态-多UIAbility共享-（内存-非持久化-退出应用同样消失）")])]),t._v(" "),s("li",[s("p",[t._v("PersistentStorage-全局持久化状态（写入磁盘-持久化状态-退出应用 数据同样存在）")]),t._v(" "),s("ul",[s("li",[t._v("支持：number, string, boolean, enum 等简单类型;")]),t._v(" "),s("li",[t._v("如果要支持对象类型，可以转换成json字符串")]),t._v(" "),s("li",[t._v("持久化变量最好是小于2kb的数据，如果开发者需要存储大量的数据，建议使用数据库api。")]),t._v(" "),s("li",[t._v("用法：\nPersistentStorage.PersistProp('属性名', 值)")])])]),t._v(" "),s("li",[s("p",[t._v("首选项- 写入磁盘")]),t._v(" "),s("ul",[s("li",[t._v("每一个key的value的长度最大为8kb")]),t._v(" "),s("li",[t._v("创建首选项-仓库的概念- 应用可以有N个仓库，一个仓库中可以有N个key")])]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Context "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@kit.AbilityKit'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" preferences "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@kit.ArkData'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两种方式引入的是同一个东西")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import preferences from '@ohos.data.preferences'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreferencesClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// static代表的是静态，可以直接通过类访问")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" defaultStore"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DEFAULT_STORE'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" firstStore"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FIRST_STORE'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字段名称，一个字段配2个方法，读取和写入")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" tokenKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TOKEN_KEY'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   仓库中存储字段")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("storeName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PreferencesClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" preferences"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPreferencesSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("storeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("putSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PreferencesClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tokenKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   读取仓库中字段")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("storeName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PreferencesClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" preferences"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPreferencesSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("storeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PreferencesClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tokenKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("关系型数据库 - 写入磁盘")])]),t._v(" "),s("li",[s("p",[t._v("端云数据库")])]),t._v(" "),s("li",[s("p",[t._v("接口调用-云端数据（服务器数据）")])])]),t._v(" "),s("h2",{attrs:{id:"_3-2-设备状态-environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-设备状态-environment"}},[t._v("#")]),t._v(" 3.2 设备状态-Environment")]),t._v(" "),s("p",[t._v("如果需要应用程序运行的设备的环境参数，以此来作出不同的场景判断，比如多语言，暗黑模式等，需要用到Environment设备环境查询。")]),t._v(" "),s("p",[t._v("Environment内置参数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("键")]),t._v(" "),s("th",[t._v("数据类型")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("accessibilityEnabled")]),t._v(" "),s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("获取无障碍屏幕读取是否启用")])]),t._v(" "),s("tr",[s("td",[t._v("colorMode")]),t._v(" "),s("td",[t._v("ColorMode")]),t._v(" "),s("td",[t._v("色彩模型类型:选项为   ColorMode.LIGHT: 浅色   ColorMode.DARK: 深色")])]),t._v(" "),s("tr",[s("td",[t._v("fontScale")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("字体大小比例，范围:[0.85,1.45]")])]),t._v(" "),s("tr",[s("td",[t._v("fontWeightScale")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("字体粗细程度，范围:[0.6,1.6]")])]),t._v(" "),s("tr",[s("td",[t._v("layoutDirection")]),t._v(" "),s("td",[t._v("LayoutDirection")]),t._v(" "),s("td",[t._v("布局方向类型:包括  LayoutDirection.LTR: 从左到右  LayoutDirection.RTL: 从右到左")])]),t._v(" "),s("tr",[s("td",[t._v("languageCode")]),t._v(" "),s("td",[t._v("atring")]),t._v(" "),s("td",[t._v("当前系统语言值，取值必须为小写字母例如zh。")])])])]),t._v(" "),s("ul",[s("li",[t._v("将设备的色彩模式存入AppStorage，默认值为Color.LIGHT")])]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("Environment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EnvProp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'colorMode'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LIGHT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("@storageProp关联的环境参数可以在本地更改，但不能同步回应用程序存储中，因为应用对环境变量参数是不可写的，只能在环境中查询。")])]),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用Environment.EnvProp将设备运行languageCode存入AppStorage中；")]),t._v("\nEnvironment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EnvProp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'colorMode'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'en'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从AppStorage获取单向绑定的languageCode的变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lang"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SubscribedAbstractProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AppStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Prop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'colorMode'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("  Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LIGHT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'亮色'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'暗色'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);